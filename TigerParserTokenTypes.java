// $ANTLR 2.7.1: "Tiger.g" -> "TigerLexer.java"$

public interface TigerParserTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int ID = 4;
	int FIELD = 5;
	int SUBSCRIPT = 6;
	int LITERAL_nil = 7;
	int STRING = 8;
	int NUMBER = 9;
	int NEG = 10;
	int BINOP = 11;
	int ASSIGN = 12;
	int CALL = 13;
	int SEQ = 14;
	int RECORD = 15;
	int NEWARRAY = 16;
	int LITERAL_if = 17;
	int LITERAL_while = 18;
	int LITERAL_for = 19;
	int LITERAL_break = 20;
	int LITERAL_let = 21;
	int DECLS = 22;
	int LITERAL_type = 23;
	int LITERAL_var = 24;
	int LITERAL_function = 25;
	int LITERAL_array = 26;
	int FIELDS = 27;
	// "=" = 28
	// "{" = 29
	// "}" = 30
	int LITERAL_of = 31;
	// "," = 32
	// "(" = 33
	// ")" = 34
	// ";" = 35
	// "[" = 36
	// "]" = 37
	int LITERAL_then = 38;
	int LITERAL_else = 39;
	int LITERAL_do = 40;
	int LITERAL_to = 41;
	// "|" = 42
	// "&" = 43
	// "<>" = 44
	// "<" = 45
	// ">" = 46
	// "<=" = 47
	// ">=" = 48
	// "+" = 49
	// "*" = 50
	// "/" = 51
	int LITERAL_in = 52;
	int LITERAL_end = 53;
	// "." = 54
	int LETTER = 55;
	int DIGIT = 56;
	int PUNCTUATION = 57;
	int COMMENT = 58;
	int STRINGCHAR = 59;
	int ESCAPECHAR = 60;
	int WS = 61;
}
